[user]
	name = Forrest Desjardins
	email = desjardinsfg@gmail.com

[github]
	user = fdesjardins

[filter "lfs"]
	clean = git lfs clean %f
	smudge = git lfs smudge %f
	required = true

[alias]
	ec = config --global -e
	aliases = config --get-regexp alias

	br = branch
	co = checkout
	cob = checkout -b
	s = status
	c = commit
	chp = cherry-pick
	cm = commit -m
	aa = add -A
	pom = push origin master
	amd = commit --amend
	up = !git pull --rebase --prune $@ && git submodule update --init --recursive
	wip = !git add -u && git commit -m 'WIP'
	sqwip = !git rebase -i $(git log --oneline --no-color | gawk '{lines[NR] = $1} /WIP/ {a=NR} END{print lines[a+1]}')
	mb = !git branch --merged | grep -v '\\*' | grep -v master
	rmmb = !git branch --merged | grep -v '\\*' | grep -v master | xargs -n 1 git branch -d
	ignorelocal = update-index --assume-unchanged
	files = "!f() { git diff --name-status "$1^" "$1"; }; f"
	afromdev = "!f() { git fetch origin dev; git co origin/dev; git cob "$1"; }; f"
	nb = "!f() { git fetch origin; git co origin/master; git cob "$1"; }; f"
	fc = "!f() { git fetch origin "$1"; git co "$1"; }; f"
	undo = reset HEAD^

	l = log --graph --pretty=format:'%C(yellow)%h%Creset -%Cred%d%Creset %s %Cgreen(%cr) %C(bold blue)<%cn>%Creset' --abbrev-commit
	ll = log --graph --pretty=format:'%C(yellow)%h%Creset -%Cred%d%Creset %s %Cgreen(%cr) %C(bold blue)<%cn>' --decorate --numstat
	fl = log -u
	review = fc
[core]
	editor = vim
[color]
	ui = auto
